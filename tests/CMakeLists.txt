# Generate tests for all parameters
function(add_picnic_tests name target)
  foreach(param IN LISTS api_targets)
    add_test(NAME "${name}_${param}" COMMAND ${target} ${param})
  endforeach(param)
endfunction()

if(M4RI_FOUND)
  foreach(target IN ITEMS mzd)
    add_executable("${target}_test" "${target}_test.c")
    target_link_libraries("${target}_test" picnic_static M4RI::m4ri m)
    apply_base_options("${target}_test")
    apply_opt_options("${target}_test")

    add_test(NAME ${target} COMMAND "${target}_test")
  endforeach(target)
endif()

list(APPEND test_static_targets shift kdf_shake256 shake lowmc bitstream)
list(APPEND test_targets)
if(NOT WIN32)
  list(APPEND test_targets picnic)
else()
  list(APPEND test_static_targets picnic)
endif()
if(WITH_EXTENDED_TESTS)
  list(APPEND test_static_targets extended_picnic)
endif()
foreach(target IN ITEMS ${test_static_targets})
  add_executable("${target}_test" "${target}_test.c")
  target_link_libraries("${target}_test" picnic_static)
  apply_base_options("${target}_test")
  apply_opt_options("${target}_test")

  if(${target} STREQUAL picnic OR ${target} STREQUAL extended_picnic)
    add_picnic_tests(${target} "${target}_test")
  else()
    add_test(NAME ${target} COMMAND "${target}_test")
  endif()
endforeach(target)

foreach(target IN ITEMS ${test_targets})
  add_executable("${target}_test" "${target}_test.c")
  target_link_libraries("${target}_test" picnic)
  apply_base_options("${target}_test")

  if(${target} STREQUAL picnic OR ${target} STREQUAL extended_picnic)
    add_picnic_tests(${target} "${target}_test")
  else()
    add_test(NAME ${target} COMMAND "${target}_test")
  endif()
endforeach(target)

if(NOT WITH_EXTRA_RANDOMNESS AND WITH_CONFIG_H)
  add_executable(kats_test kats_test.c)
  if (NOT WIN32)
    target_link_libraries(kats_test picnic)
  else()
    target_link_libraries(kats_test picnic_static)
  endif()
  apply_base_options(kats_test)
  target_compile_definitions(kats_test PRIVATE "-DKATDIR=\"${CMAKE_CURRENT_SOURCE_DIR}\"")

  add_picnic_tests(kats kats_test)
endif()

if(NOT WIN32)
  foreach(target IN ITEMS ${api_targets})
    add_executable("api_${target}_test" api_test.c)
    apply_base_options("api_${target}_test")
    target_link_libraries("api_${target}_test" "${target}")
    if (VALGRIND_FOUND AND WITH_VALGRIND_CT_TESTS)
      # if valgrind CT tests are enabled, execute tests with valgrind
      add_test(NAME "api_${target}" COMMAND "${VALGRIND_EXECUTABLE}" -q --error-exitcode=1 --track-origins=yes "$<TARGET_FILE:api_${target}_test>")
    else()
      add_test(NAME "api_${target}" COMMAND "api_${target}_test")
    endif()
  endforeach(target)
endif()
