if(M4RI_FOUND AND OPENSSL_FOUND)
  foreach(target IN ITEMS mpc lowmc_str mzd)
    add_executable("${target}_test" "${target}_test.c")
    target_link_libraries("${target}_test" picnic_static ${M4RI_LIBRARY} OpenSSL::Crypto)
    target_compile_definitions("${target}_test" PRIVATE HAVE_CONFIG_H PICNIC_STATIC)
    if(WITH_MUL_M4RI)
      target_compile_definitions("${target}_test" PRIVATE MUL_M4RI)
    endif()
    if(WITH_CUSTOM_INSTANCES)
      target_compile_definitions("${target}_test" PRIVATE WITH_CUSTOM_INSTANCES)
    endif()
    if(WITH_SIMD_OPT)
      target_compile_definitions("${target}_test" PRIVATE WITH_OPT)
      if(CC_SUPPORTS_SSE2 AND WITH_SSE2)
        target_compile_definitions("${target}_test" PRIVATE WITH_SSE2)
        if(CC_SUPPORTS_AVX2 AND WITH_AVX2)
          target_compile_definitions("${target}_test" PRIVATE WITH_AVX2)
        endif()
      endif()
      if(CC_SUPPORTS_NEON AND WITH_NEON)
        target_compile_definitions("${target}_test" PRIVATE WITH_NEON)
      endif()
    endif()
    if(MSVC)
      if(USE_STATIC_RUNTIME)
        target_compile_options("${target}_test" PRIVATE "/MT$<$<CONFIG:Debug>:d>")
      endif()
    endif()

    add_test(NAME ${target} COMMAND "${target}_test")
  endforeach(target)
endif()

list(APPEND test_targets bitstream kdf_shake256 picnic extended_picnic lowmc)
if(NOT WITH_EXTRA_RANDOMNESS)
  list(APPEND test_targets kats)
endif()
foreach(target IN ITEMS ${test_targets})
  add_executable("${target}_test" "${target}_test.c")
  target_link_libraries("${target}_test" picnic_static)
  target_compile_definitions("${target}_test" PRIVATE HAVE_CONFIG_H PICNIC_STATIC)
  if(WITH_MUL_M4RI)
    target_compile_definitions("${target}_test" PRIVATE MUL_M4RI)
  endif()
  if(WITH_CUSTOM_INSTANCES)
    target_compile_definitions("${target}_test" PRIVATE WITH_CUSTOM_INSTANCES)
  endif()
  if(MSVC)
    if(USE_STATIC_RUNTIME)
      target_compile_options("${target}_test" PRIVATE "/MT$<$<CONFIG:Debug>:d>")
    endif()
  endif()

  add_test(NAME ${target} COMMAND "${target}_test")
endforeach(target)

if(NOT MSVC)
  foreach(target IN ITEMS L1_FS L1_UR L3_FS L3_UR L5_FS L5_UR)
    add_executable("api_${target}_test" "api_test.c")
    target_link_libraries("api_${target}_test" "picnic_${target}")
    target_include_directories("api_${target}_test" PRIVATE
      "${CMAKE_CURRENT_SOURCE_DIR}/../${target}")

    add_test(NAME "api_${target}" COMMAND "api_${target}_test")
  endforeach(target)
endif()
